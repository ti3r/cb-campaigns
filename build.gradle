buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
		mongodbPluginVersion = '0.8.0'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.sourcemuse.gradle.plugin:gradle-mongo-plugin:${mongodbPluginVersion}")
	}
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'mongo'
apply plugin: 'pl.allegro.tech.build.axion-release'

jar {
	baseName = 'cb-campaigns'
	version = "1.0-SNAPSHOT"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
//	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web'){
		// We will be using Undertow for our HTTP container so we don't need Tomcat
		exclude module: 'spring-boot-starter-tomcat'
	}
	// Undertow will serve as the application's HTTP container
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile('com.mangofactory:swagger-springmvc:1.0.2')
	//Test dependencies
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('cglib:cglib-nodep:3.2.0')
	testCompile('com.jayway.jsonpath:json-path:2.1.0')
	testCompile('org.codehaus.groovy:groovy-all:2.4.5')
	//These two should have the same version and comply with major minor of groovy-all
	testCompile('org.spockframework:spock-core:1.0-groovy-2.4')
	testCompile('org.spockframework:spock-spring:1.0-groovy-2.4')
	testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.1")
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}


File checkstyleConfigFile = file("${project.projectDir}/src/main/resources/config/checkstyle/checkstyle.xml")

checkstyle {
    configFile = checkstyleConfigFile
    ignoreFailures = true
}

//Release settings
scmVersion {
    tag {
	prefix = 'campaigns'
    }
    
    hooks {
	pre 'fileUpdate', [file: 'gradle.properties', pattern: {v,p -> /.*version=.*/}, replacement: {v,p ->"version=$v"}]
	pre 'fileUpdate', [file: 'build.gradle', pattern: {v,p -> /.*version.*$/}, replacement: {v,p ->"version=$v"}]
	pre 'commit'
    }
}
